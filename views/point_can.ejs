<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style_point.css">
    <link rel="shortcut icon" type="image/x-icon" href="favicon.png">
    <link rel="stylesheet" href="style_point_can.css">
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8/dist/teachablemachine-image.min.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <!-- <script type="text/javascript" src="../js/jquery.fullPage.js"></script> -->
    <!-- <script type="text/javascript" src="../js/fullpage_control.js"></script> -->
    <title>온새미로 - 포인트</title>
</head>

<body>
    <div class="container">
        <div class="menu">
            <!-- 상단 메뉴-->
            <ul>
                <!--로고-->
                <li><a href="/"><img src="logo.png"
                            style="max-width: 80%; height: auto; margin-top:10%; margin-left:20%"></a></li>
                <li></li>
                <li></li>
                <li></li>
                <li><a href="/">홈</a></li>
                <li>
                    <div class="dropdown">
                        <a href="" class="dropbtn">분리수거 정보</a>
                        <div class="dropdown-content">
                            <a href="/swc_way">분리수거 방법</a>
                            <a href="/swc_reason">분리수거 이유</a>
                        </div>
                    </div>
                </li>
                <li><a href="/point" style="color:#17242B;">새싹 포인트</a></li>
                <li></li>
                <li id="login_li"><a href="/login">로그인</a></li>
                <li id="signup_li"><a href="/signup">회원가입</a></li>
            </ul>
        </div>
        <div class="content">
            <div id="big_title">캔을 분리수거해보자🥫</div>
            <!-- <button type="button" onclick="init()">Start</button> -->
            <div id="webcam-container""></div>
            <div id=" label-container" style="display: none;"></div>
            <div id="desc"></div>
        </div>
    </div>
    <div class="footer">
        <div class="footer_element">
            <img src="logo.png" style="max-width: 130px; height: auto;"><br>
            ©2021 by Jiyoon Park and Sukmin Lee
        </div>
        <div class="footer_element">
            Tel) 010 5135 4735 | 010 6292 4267<br>
            Email) s2019s12@e-mirim.hs.kr | s2019s16@e-mirim.hr.kr<br>
            Address) Mirim Girl's Information and Science High School<br>
        </div>
        <div class="footer_element">
            <a href="https://github.com/saigjiej/Friendly-Tree" class="footer_link">Source Code</a><br>
            <a href="https://github.com/saigjiej/Friendly-Tree" class="footer_link">Github Link</a>
        </div>
    </div>
    <script type="text/javascript" src="login_confirm.js"></script>
</body>
<script type="text/javascript">
    const URL = "https://teachablemachine.withgoogle.com/models/_bC3szrY-/";

    const desc = document.querySelector("#desc");
    const texts = ["올바르게 분리수거된 캔을 카메라에 비춰주세요",
        "😭캔을 납작하게 눌러주세요😭", "😀Wow!! 캔이 분리수거가 아주 잘되었네요😀"]
    desc.innerHTML = texts[0];

    let model, webcam, maxPredictions;

    init();

    async function init() {
        const modelURL = URL + "model.json";
        const metadataURL = URL + "metadata.json";

        model = await tmImage.load(modelURL, metadataURL);
        maxPredictions = model.getTotalClasses();

        const flip = true;
        webcam = new tmImage.Webcam(screen.availWidth*0.5, screen.availHeight*0.5, flip);
        await webcam.setup();
        await webcam.play();
        window.requestAnimationFrame(loop);

        document.getElementById("webcam-container").appendChild(webcam.canvas);
    }

    async function loop() {
        webcam.update();
        await predict();
        window.requestAnimationFrame(loop);
    }

    async function predict() {
        const prediction = await model.predict(webcam.canvas);

        if (0.9 < prediction[0].probability.toFixed(2)) {
            desc.innerHTML = texts[1];
        } else if (0.9 < prediction[1].probability.toFixed(2)) {
            desc.innerHTML = texts[2];
            webcam.stop();
            swal({
                title: "성공!",
                text: "새싹 포인트를 1점 얻으셨어요🌱",
                icon: "success",
                button: "확인",
            }).then(function () {
                console.log("클");
                window.location.href = "/point_up";
            });
        }
    }
</script>